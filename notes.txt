Databases:
    Tickets-
        - ticket_id:int
        - user_name:string
        - phone_number:string
        - timming_start:int
        - timming_end:int
        - state:int  [1-active : 0-expired]


API Endpoints:
    /bookticket
        - Receives a name:string, phone_number:string, timming_start:int & timming_end:int
        - Creates an entry if not in Users (check by phone number)
        - Creates an entry in Tickets 
        - If the number if tickets exceed 20 for a given timming_start:int skip the request
    
    /update
        - Receives timming_start:int & timming_end:int
        - Updates entries in Tickets

    /view_tickets
        - Receives timming_start:int
        - Returns JSON of all tickets with same timming_start
    
    /delete
        - Receives ticket_id
        - Deletes that ticket from Tickets

    /view_details
        - Receives ticket_id:int
        - Returns JSON of all the details of the User who owns the ticket




CronJob : To deleted all tickets older than 8 hrs every 30 secs


```
import atexit

from apscheduler.scheduler import Scheduler
from flask import Flask

app = Flask(__name__)

cron = Scheduler(daemon=True)
# Explicitly kick off the background thread
cron.start()

@cron.interval_schedule(hours=1)
def job_function():
    # Do your work here

# Shutdown your cron thread if the web process is stopped
atexit.register(lambda: cron.shutdown(wait=False))

if __name__ == '__main__':
    app.run()
```

GET retrieves resources.
POST submits new data to the server.
PUT updates existing data.
DELETE removes data.

With the two principles we discussed above in mind, we should create 
routes like GET /articles/ for getting news articles. 
Likewise, POST /articles/ is for adding a new article , 
PUT /articles/:id is for updating the article with the given id.
DELETE /articles/:id is for deleting an existing article with the given ID.